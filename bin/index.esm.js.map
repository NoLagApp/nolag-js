{"version":3,"file":"index.esm.js","sources":["../src/shared/enum/ETransportCommand.ts","../src/shared/utils/Encodings.ts","../src/shared/utils/TransportCommands.ts","../src/shared/utils/transport.ts","../src/shared/models/Topic.ts","../src/shared/enum.ts","../src/shared/constants.ts","../src/client/NoLagClient.ts","../src/client/index.ts","../node_modules/ws/lib/constants.js","../node_modules/ws/lib/buffer-util.js","../node_modules/ws/lib/permessage-deflate.js","../node_modules/ws/lib/limiter.js","../node_modules/ws/lib/validation.js","../node_modules/ws/lib/receiver.js","../node_modules/ws/lib/sender.js","../node_modules/ws/lib/extension.js","../node_modules/ws/lib/websocket.js","../node_modules/ws/lib/event-target.js","../node_modules/ws/lib/subprotocol.js","../node_modules/ws/lib/websocket-server.js","../src/instance/node.ts","../src/shared/utils/generateQueryString.ts","../src/api/controllers/tunnels/TunnelDevice.ts","../src/api/controllers/tunnels/TunnelPublish.ts","../src/api/controllers/tunnels/TunnelTopic.ts","../src/api/controllers/tunnels/TunnelApi.ts","../src/api/ApiTunnel.ts","../src/api/index.ts","../src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,"'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n",null,null,null,null,null,null,null,null,null],"names":["ETransportCommand","ETransportCommandSeparator","stringToArrayBuffer","str","buf","ArrayBuffer","length","bufView","Uint8Array","strLen","i","charCodeAt","uint8ArrayToString","buffer","reduce","accumulator","index","String","fromCharCode","TransportCommands","commandArray","setCommand","command","commandAction","this","push","commandActionArray","Array","isArray","convertArray","convertStringNumberArray","commandActionBuffer","from","commandActions","map","action","ArraySeparator","flat","build","transportCommands","NqlTransport","encode","payload","separatorArray","Payload","transportCommandsUintArray","commandLength","byteLength","payloadOffset","payloadLength","payloadUintArray","tmp","set","decode","transport","totalTransportBytes","transportBufferViewer","payloadSeparatorIndex","indexOf","commands","slice","payloadStartIndex","extractedCommands","extractCommands","getCommand","hasSeparatorIndexes","commandActionUint8ArrayToString","item","join","commandActionUint8ArrayToStringArray","groupedUint8Array","tempGroup","forEach","uint8Array","Number","commandByteGroup","commandBeingAssigned","byte","Object","values","keys","key","Topic","connection","topicName","onReceiveCallback","identifiers","presence","constructor","setConnection","saveIdentifiers","OR","subscribe","findSavedIdentifier","identifier","value","find","s","findKey","findValue","deleteSavedIdentifiers","identifierList","Identifier","Presence","AddAction","send","setPresence","_onReceiveMessage","data","onReceive","callbackFn","addIdentifiers","identifiersList","removeIdentifiers","DeleteAction","unsubscribe","publish","EConnectionStatus","EEnvironment","EAction","EEncoding","EVisibilityState","ESeparator","EAccessPermission","EStatus","ETopicType","CONSTANT","DefaultWsHost","DefaultApiHost","DefaultWsUrl","DefaultPort","DefaultWsProtocol","DefaultApiUrl","DefaultHttpProtocol","NoLagClient","host","authToken","wsInstance","protocol","url","deviceConnectionId","undefined","environment","deviceTokenId","defaultCheckConnectionInterval","defaultCheckConnectionTimeout","checkConnectionInterval","checkConnectionTimeout","reConnect","callbackOnOpen","callbackOnReceive","callbackOnClose","callbackOnError","connectionStatus","Idle","backpressureSendInterval","senderInterval","unifiedWebsocket","connectOptions","startSender","setInterval","sendTransport","shift","slowDownSender","backpressureInterval","clearInterval","addToBuffer","setReConnect","connect","initWebsocketConnection","Promise","resolve","reject","checkConnection","Connected","setTimeout","disconnect","close","onOpen","event","_onOpen","onMessage","_onReceive","onClose","_onClose","onError","_onError","authenticate","Connecting","Authenticate","Reconnect","callback","onReceiveMessage","decoded","InitConnection","Acknowledge","Error","Disconnected","Alert","presences","heartbeat","Tunnel","noLagClient","topics","heartbeatTimer","heartBeatInterval","visibilityState","Visible","callbackOnDisconnect","callbackOnReconnect","callbackOnReceivedError","options","disconnectOnNoVisibility","onVisibilityChange","startHeartbeat","stopHeartbeat","initiate","reconnect","document","addEventListener","async","Hidden","err","canReconnect","doReconnect","onDisconnect","onReconnect","onErrors","getTopic","encodedBuffer","status","BINARY_TYPES","hasBlob","Blob","constants","EMPTY_BUFFER","Buffer","alloc","GUID","kForOnEventAttribute","Symbol","kListener","kStatusCode","kWebSocket","NOOP","require$$0","FastBuffer","species","_mask","source","mask","output","offset","_unmask","bufferUtilModule","exports","concat","list","totalLength","target","allocUnsafe","byteOffset","toArrayBuffer","toBuffer","readOnly","isBuffer","isView","unmask","process","env","WS_NO_BUFFER_UTIL","bufferUtil","require","e","zlib","require$$1","Limiter","kDone","kRun","limiter","concurrency","pending","Infinity","jobs","add","job","require$$2","require$$3","TRAILER","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","deflateOnData","chunk","inflateOnData","_maxPayload","RangeError","code","removeListener","reset","inflateOnError","_inflate","permessageDeflate","isServer","maxPayload","_options","_threshold","threshold","_isServer","_deflate","params","concurrencyLimit","extensionName","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","accept","configurations","normalizeParams","acceptAsServer","acceptAsClient","cleanup","offers","opts","accepted","response","num","isInteger","TypeError","decompress","fin","done","_decompress","result","compress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","on","write","flush","_readableState","endEmitted","createDeflateRaw","zlibDeflateOptions","Z_SYNC_FLUSH","isUtf8","_isValidUTF8","len","validationModule","isBlob","arrayBuffer","type","stream","toStringTag","isValidStatusCode","isValidUTF8","tokenChars","WS_NO_UTF_8_VALIDATE","Writable","PerMessageDeflate","require$$4","receiver","super","_allowSynchronousEvents","allowSynchronousEvents","_binaryType","binaryType","_extensions","extensions","_skipUTF8Validation","skipUTF8Validation","_bufferedBytes","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_errored","_loop","_state","_write","encoding","cb","startLoop","consume","n","dst","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","createError","compressed","haveLength","readUInt16BE","readUInt32BE","Math","pow","controlMessage","dataMessage","error","messageLength","fragments","emit","setImmediate","end","ErrorCtor","message","prefix","statusCode","errorCode","captureStackTrace","randomFillSync","applyMask","require$$5","kByteLength","maskBuffer","RANDOM_POOL_SIZE","randomPool","randomPoolPointer","Sender","socket","generateMask","_generateMask","_maskBuffer","_socket","_firstFragment","_queue","onerror","frame","dataLength","merge","skipMasking","opcode","rsv1","writeUInt16BE","writeUIntBE","enqueue","dispatch","sendFrame","ping","size","getBlobData","pong","perMessageDeflate","binary","blob","then","destroyed","nextTick","callCallbacks","dequeue","catch","_","Reflect","apply","cork","uncork","sender","dest","name","elem","extension","format","k","v","parse","header","create","paramName","mustUnescape","isEscaping","inQuotes","start","SyntaxError","replace","token","EventEmitter","https","http","net","tls","randomBytes","createHash","URL","require$$7","require$$8","Receiver","require$$9","require$$10","require$$11","require$$12","EventTarget","removeEventListener","kCode","kData","kMessage","kReason","kTarget","kType","kWasClean","Event","defineProperty","prototype","enumerable","CloseEvent","reason","wasClean","ErrorEvent","MessageEvent","handler","listener","listeners","wrapper","isBinary","toString","callListener","_closeFrameReceived","_closeFrameSent","once","thisArg","handleEvent","call","eventTarget","require$$13","require$$14","require$$15","kAborted","protocolVersions","readyStates","subprotocolRegex","WebSocket","address","protocols","_closeCode","_closeMessage","_closeTimer","_errorEmitted","_paused","_protocol","_readyState","CONNECTING","_receiver","_sender","_bufferedAmount","_redirects","initAsClient","_autoPong","autoPong","includes","bufferedAmount","_writableState","isPaused","onclose","onopen","onmessage","readyState","_url","setSocket","head","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","senderOnError","setNoDelay","unshift","socketOnClose","socketOnData","socketOnEnd","socketOnError","OPEN","emitClose","CLOSED","removeAllListeners","CLOSING","errorEmitted","setCloseTimer","msg","abortHandshake","_req","pause","sendAfterClose","resume","needDrain","terminate","destroy","websocket","protocolVersion","followRedirects","maxRedirects","socketPath","hostname","timeout","method","path","port","parsedUrl","href","isSecure","isIpcUrl","invalidUrlMessage","pathname","hash","emitErrorAndClose","defaultPort","request","protocolSet","Set","req","createConnection","tlsConnect","netConnect","startsWith","headers","Connection","Upgrade","search","handshakeTimeout","test","has","origin","Origin","username","password","auth","parts","split","_originalIpc","_originalSecure","_originalHostOrSocketPath","entries","toLowerCase","listenerCount","isSameHost","authorization","cookie","res","location","addr","abort","upgrade","digest","update","serverProt","protError","secWebSocketExtensions","extensionNames","finishRequest","servername","isIP","setHeader","bind","receiverOnFinish","read","clearTimeout","finished","property","get","subprotocol","require$$6","keyRegex","server","STATUS_CODES","h","abortHandshakeOrEmitwsClientError","websocketServer","handleProtocols","clientTracking","verifyClient","noServer","backlog","_server","createServer","body","writeHead","listen","emitConnection","_removeListeners","addListeners","listening","handleUpgrade","clients","_shouldEmitClose","shouldHandle","version","secWebSocketProtocol","info","secure","authorized","encrypted","verified","completeUpgrade","readable","writable","ws","next","delete","generateQueryString","query","queryArray","queryObject","queryString","TunnelDevice","routeNamespace","parentRouteNamespace","tunnelId","requestParams","createDevice","fetch","baseURL","JSON","stringify","json","getDeviceById","listDevices","updateDevice","deleteDevice","TunnelPublish","baseUrl","wsHost","TunnelTopic","createTopic","getTopicById","topicId","listTopics","updateTopic","deleteTopic","TunnelApi","apiTunnel","devices","httpPublish","ApiTunnel","apiKey","wsUrl","tunnels","tunnelQuery","URLSearchParams","tunnel","Api","WebSocketClient"],"mappings":"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","x_google_ignoreList":[9,10,11,12,13,14,15,16,17,18,19,20]}